name: "Bootstrap"
description: "Bootstrap all tools and dependencies"
inputs:
  go-version:
    description: "Go version to install"
  go-version-file:
    description: "Go version file to use"
    default: go.mod
  cache-dependency-path:
    description: "Setup Go cache dependency path"
    default: |
      go.sum
      make/go.sum
  cache-key-prefix:
    description: "Prefix all cache keys with this value"
    required: true
    default: "go-make"

runs:
  using: "composite"
  steps:
    - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 #v5.0.0
      if: ${{ hashFiles('.git/') == '' }}
      with:
        persist-credentials: false

    - uses: actions/setup-go@v5
      if: ${{ inputs.go-version != '' || inputs.go-version-file != '' }}
      with:
        go-version: ${{ inputs.go-version }}
        go-version-file: ${{ !inputs.go-version && inputs.go-version-file || '' }}
        cache-dependency-path: ${{ inputs.cache-dependency-path }}

    - name: Restore tool cache
      id: tool-cache
      uses: actions/cache@v4
      with:
        path: ${{ github.workspace }}/.tool
        key: ${{ inputs.cache-key-prefix }}-${{ runner.os }}-tool-${{ hashFiles('.binny.yaml') }}

    - name: Build cache key for test fixtures
      id: unit-fixtures
      shell: bash # necessary to be explicit for Windows
      run: |
        echo "FIXTURES_FINGERPRINT=$(make fixtures:fingerprint)" >> "$GITHUB_OUTPUT"
        {
          echo 'FIXTURES_DIRECTORIES<<EOF'
          echo "$(make fixtures:directories)"
          echo EOF
        } >> "$GITHUB_OUTPUT"

    - name: Restore test-fixture cache
      id: unit-fixture-cache
      uses: actions/cache@2f8e54208210a422b2efd51efaa6bd6d7ca8920f #v3.4.3
      if: ${{ steps.unit-fixtures.outputs.FIXTURES_DIRECTORIES }}
      with:
        path: |
          ${{ steps.unit-fixtures.outputs.FIXTURES_DIRECTORIES }}
        key: ${{ inputs.cache-key-prefix }}-${{ runner.os }}-unit-fixture-cache-${{ steps.unit-fixtures.outputs.FIXTURES_FINGERPRINT }}
