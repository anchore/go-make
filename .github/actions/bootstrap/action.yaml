name: "Bootstrap"
description: "Bootstrap all tools and dependencies"
inputs:
  go-version:
    description: "Go version to install"
  go-version-file:
    description: "Go version file to use"
    default: go.mod
  cache-dependency-path:
    description: "Setup Go cache dependency path"
    default: |
      go.sum
      .make/go.sum
  cache-key-prefix:
    description: "Prefix all cache keys with this value"
    required: true
    default: "go-make"

runs:
  using: "composite"
  steps:
    - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 #v5.0.0
      if: ${{ hashFiles('.git/') == '' }}
      with:
        persist-credentials: false

    - uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 #v5.5.0
      if: ${{ inputs.go-version != '' || inputs.go-version-file != '' }}
      with:
        go-version: ${{ inputs.go-version }}
        go-version-file: ${{ !inputs.go-version && inputs.go-version-file || '' }}
        cache-dependency-path: ${{ inputs.cache-dependency-path }}

    - name: Restore tool cache
      id: tool-cache
      uses: actions/cache@0400d5f644dc74513175e3cd8d07132dd4860809 #v4.2.4
      with:
        path: ${{ github.workspace }}/.tool
        key: ${{ inputs.cache-key-prefix }}-${{ runner.os }}-tool-${{ hashFiles('.binny.yaml') }}

    - uses: actions/github-script@v7
      with:
        script: |
          console.log(`all env keys: ${Object.keys(process.env).sort()}`)
          const fs = require('fs')
          const matrixJSON = (process.env.MATRIX_JSON||'').replace(/\s+/g, ' ')
          console.log('matrixJSON', matrixJSON)
          const env = { GITHUB_TOKEN: process.env.GITHUB_TOKEN||'', MATRIX_JSON: matrixJSON }
          Object.keys(process.env).filter(k => k.startsWith("ACTIONS_")).forEach(k => { env[k] = process.env[k] })
          const f = `${process.env.HOME||process.env.USERPROFILE}/.bootstrap_actions_env`
          console.log(`writing env to '${f}' with env keys: ${Object.keys(env).sort()}`)
          fs.writeFileSync(f, JSON.stringify(env))
      env:
        GITHUB_TOKEN: ${{ github.token }}
        MATRIX_JSON: ${{ toJSON(matrix) }}

    - name: Build cache key for test fixtures
      id: unit-fixtures
      shell: bash # necessary to be explicit for Windows
      run: |
        echo "FIXTURES_FINGERPRINT=$(make fixtures:fingerprint)" >> "$GITHUB_OUTPUT"
        {
          echo 'FIXTURES_DIRECTORIES<<EOF'
          echo "$(make fixtures:directories)"
          echo EOF
        } >> "$GITHUB_OUTPUT"

    - name: Restore test-fixture cache
      id: unit-fixture-cache
      uses: actions/cache@0400d5f644dc74513175e3cd8d07132dd4860809 #v4.2.4
      if: ${{ steps.unit-fixtures.outputs.FIXTURES_DIRECTORIES }}
      with:
        path: |
          ${{ steps.unit-fixtures.outputs.FIXTURES_DIRECTORIES }}
        key: ${{ inputs.cache-key-prefix }}-${{ runner.os }}-unit-fixture-cache-${{ steps.unit-fixtures.outputs.FIXTURES_FINGERPRINT }}
